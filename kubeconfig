function _current() {
    echo "\$KUBECONFIG=$KUBECONFIG"
}

function _all() {
    for key in ${!KUBECONFIG_MAP[@]};do
        if [[ ${KUBECONFIG_MAP[$key]} == $KUBECONFIG ]]; then
            echo "* $key => ${KUBECONFIG_MAP[$key]}"
        else
            echo "$key => ${KUBECONFIG_MAP[$key]}"
        fi
    done
}

function _switch() {
    env=${1:?"env is required for switch"}
    config=${KUBECONFIG_MAP[$env]}
    if [[ -z "$config" ]]; then
        echo "'$env' is not exists. please run 'all' to check the valid env"
        return 1
    else
        # direct export can't affect the current shell. use eval instead
        eval "export KUBECONFIG=${KUBECONFIG_MAP[$env]}"
    fi
}

function _usage() {
    error_msg=${1}
    if [[ -n $error_msg ]]; then
        echo $error_msg
        echo ""
    fi
    echo "kconfig <command> [args]:"
    echo "    current         show current config"
    echo "    all             list all available"
    echo "    switch <env>    switch to specific environment"
}

function kconfig() {
    cmd=${1}
    shift 1
    case $cmd in
        current )
            _current
            ;;
        all )
            _all
            ;;
        switch )
            _switch $1
            ;;
        * )
            _usage "$cmd is not a valid command"
            ;;
    esac
    return 0
}

_kconfig_complete() {
    local cur prev opts
    cur="${COMP_WORDS[COMP_CWORD]}"

    opts="current all switch"

    COMPREPLY=() # clean up to escape from other functions
    COMPREPLY=( $(compgen -W "$opts" -- ${cur}) )
    return 0
}

complete -F _kconfig_complete kconfig

